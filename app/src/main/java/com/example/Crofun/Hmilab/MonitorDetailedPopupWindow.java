package com.example.Crofun.Hmilab;

import android.app.Activity;
import android.content.Context;
import android.graphics.drawable.ColorDrawable;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.ImageView;
import android.widget.PopupWindow;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.List;

import lecho.lib.hellocharts.gesture.ZoomType;
import lecho.lib.hellocharts.model.Axis;
import lecho.lib.hellocharts.model.Line;
import lecho.lib.hellocharts.model.LineChartData;
import lecho.lib.hellocharts.model.PointValue;
import lecho.lib.hellocharts.view.LineChartView;
import lecho.lib.hellocharts.gesture.ContainerScrollType;

/**
 * Created by Angel on 2017/10/18.
 */

public class MonitorDetailedPopupWindow {

    private static String TAG = "DetailedPopupWindow";

    private PopupWindow mPopupWindow;

    private TextView mTextView;
    private View mContentView;

    private ZoomType zoomType;


    public MonitorDetailedPopupWindow(){

        mContentView = LayoutInflater.from(MyApplication.getContext()).inflate(R.layout.line_chart_detail_popupwindow, null);
        mPopupWindow = new PopupWindow();
        mPopupWindow.setHeight(ViewGroup.LayoutParams.WRAP_CONTENT);
        mPopupWindow.setWidth(ViewGroup.LayoutParams.MATCH_PARENT);
        mPopupWindow.setContentView(mContentView);
        mPopupWindow.setFocusable(true);
        mPopupWindow.setBackgroundDrawable(new ColorDrawable(0xDFFFFFFF));
        mPopupWindow.setAnimationStyle(R.style.DetailedWindowAnimation);

    }

    //
    public void show(final Context mContext, MonitorCardData data)
    {
        LineChartView mLineChartView;
        ImageView mImageView;
        TextView mTextView;

        List<Integer> message;
        List<PointValue> valueList;
        List<Line> lineList;

        //Genji
        mPopupWindow.showAtLocation(((Activity) mContext).getWindow().getDecorView(), Gravity.CENTER, 0, 0);
        mLineChartView =(LineChartView) mContentView.findViewById(R.id.line_chart_view_detailed);
        message = data.getMessage();

        //设置背景变暗
        WindowManager.LayoutParams lp = ((Activity) mContext).getWindow().getAttributes();
        lp.alpha =0.4f;
        ((Activity) mContext).getWindow().setAttributes(lp);

        mPopupWindow.setOnDismissListener(new PopupWindow.OnDismissListener() {
            @Override
            public void onDismiss() {
                WindowManager.LayoutParams lp = ((Activity) mContext).getWindow().getAttributes();
                lp.alpha = 1f;
                ((Activity) mContext).getWindow().setAttributes(lp);
            }
        });

        //注册关闭按钮
        mImageView = mContentView.findViewById(R.id.detailed_popup_close);
        mImageView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                mPopupWindow.dismiss();
            }
        });

        //更新Tag
        mTextView = mContentView.findViewById(R.id.detailed_popup_tag);
        mTextView.setText(data.getTitle());

        //获取所有的数据们
        valueList = new ArrayList<>();
        if (message != null) {
            for (int i = 0; i < message.size(); i++) {
                valueList.add(new PointValue(i, message.get(i)));
            }
        }

        //创建一个空线
        List<PointValue> voidValueList = new ArrayList<>();
        for (int i=0; i<256; i+=8)
        {
            PointValue pv = new PointValue(0, i);
            voidValueList.add(pv);
        }
        Line voidLine = new Line(voidValueList);
        voidLine.setColor(0x00000000);


        //创建数据线
        Line line = new Line(valueList);
        line.setColor(R.color.ZanDark);
        line.setCubic(false);
        line.setFilled(false);
        line.setHasPoints(false);
        line.setStrokeWidth(1);

        //线的List
        lineList = new ArrayList<>();
        //lineList.add(voidLine);
        lineList.add(line);

        //x轴
        Axis axisX = new Axis();
        axisX.setTextColor(R.color.ZanAxis);
        axisX.setTextSize(10);
        axisX.setAutoGenerated(true);

        //y轴
        Axis axisY = new Axis();
        axisY.setTextColor(R.color.ZanAxis);
        axisY.setTextSize(10);
        axisY.setAutoGenerated(true);

        //新建一个可以传入的数据，填入数据
        LineChartData lineChartData = new LineChartData();
        lineChartData.setLines(lineList);
        lineChartData.setAxisXBottom(axisX);
        lineChartData.setAxisYLeft(axisY);

        mLineChartView.setLineChartData(lineChartData);
        mLineChartView.setInteractive(true);
        mLineChartView.setZoomType(ZoomType.HORIZONTAL);
        mLineChartView.setContainerScrollEnabled(true, ContainerScrollType.VERTICAL);
        mLineChartView.setContainerScrollEnabled(true, ContainerScrollType.HORIZONTAL);
        mLineChartView.requestLayout();

    }
}
